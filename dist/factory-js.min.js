/*! factory-js 27-01-2014 */
var Factory={};!function(){var a={},b=function(a){return a.propertiesToSequence=[],a.sequence=function(a,b){return this.propertiesToSequence.push({property:a,fn:b}),this},a.defaults=function(a){return this.defaultProperties=a,this},a.prototype.autoIncrement=function(){var a=0;return function(b,c){("undefined"==typeof this.autoIncremented||this.autoIncremented!==!0)&&(a+=1,this.autoIncremented=!0),this[b]="function"==typeof c?c(a):a}}(),a},c=function(c,d){if("undefined"!=typeof d&&"function"!=typeof d)throw{name:"NotAFunctionError",message:"constrFn is not a function; it is a: "+typeof d};if(a.hasOwnProperty(c))throw{name:"AlreadyDefinedType",message:"that object type was already defined"};return"undefined"==typeof d&&(d=function(){}),b(d),a[c]=d,a[c]},d=function(b){var c=a[b],d={},e={},f={},g=0;if("function"!=typeof c)throw{name:"NotSuchConstructorError",message:b+" doesn't exist"};d=new c;for(f in c.defaultProperties)d[f]=c.defaultProperties[f];for(g=0;g<c.propertiesToSequence.length;g+=1)e=c.propertiesToSequence[g],d.autoIncrement(e.property,e.fn);return d},e=function(a,b){for(var c=[],e=0;b>e;e+=1)c.push(d(a));return c};Factory={define:c,build:d,buildList:e}}();